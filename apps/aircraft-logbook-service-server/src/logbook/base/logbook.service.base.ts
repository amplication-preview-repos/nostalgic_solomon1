/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Logbook as PrismaLogbook } from "@prisma/client";

export class LogbookServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LogbookCountArgs, "select">): Promise<number> {
    return this.prisma.logbook.count(args);
  }

  async logbooks(args: Prisma.LogbookFindManyArgs): Promise<PrismaLogbook[]> {
    return this.prisma.logbook.findMany(args);
  }
  async logbook(
    args: Prisma.LogbookFindUniqueArgs
  ): Promise<PrismaLogbook | null> {
    return this.prisma.logbook.findUnique(args);
  }
  async createLogbook(args: Prisma.LogbookCreateArgs): Promise<PrismaLogbook> {
    return this.prisma.logbook.create(args);
  }
  async updateLogbook(args: Prisma.LogbookUpdateArgs): Promise<PrismaLogbook> {
    return this.prisma.logbook.update(args);
  }
  async deleteLogbook(args: Prisma.LogbookDeleteArgs): Promise<PrismaLogbook> {
    return this.prisma.logbook.delete(args);
  }
}
